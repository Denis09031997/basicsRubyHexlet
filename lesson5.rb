# Первая функция

# Ниже дано определение функции, находящей среднее арифметическое:

def find_average(a, b)
    sum = a + b
    sum.to_f / 2
end

puts find_average(3, 1)

# В Ruby существует ровно один общепринятый стиль оформления кода, которого придерживается все комьюнити:

# Отступы — два пробела

# Для определения имен переменных и функций используется snake_case

# Определение классов — CamelCase

# Определение функции начинается ключевым словом def, 
# за которым идёт имя функции и её параметры. 
# В конце добавляется end. В отличие от своих собратьев, 
# в Ruby не обязательно писать ключевое слово return. 
# Как и в Smalltalk, в Ruby функции всегда возвращают результат последнего вычисленного выражения. 
# Иногда return всё же используется, когда нужно досрочно выйти из функции. В остальных случаях его опускают.

# Необычно в примере выше может выглядеть код sum.to_f. 
# Здесь происходит вызов метода to_f() у числа, записанного в sum. Для чего это нужно? 
# В Ruby при делении целых чисел на выходе всегда получается целое число. 
# Если при этом была дробная часть, она отбрасывается:

3 / 2 # 1
3.to_f / 2 # 1.5
